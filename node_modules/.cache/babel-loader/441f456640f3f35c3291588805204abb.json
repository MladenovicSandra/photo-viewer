{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandr\\\\Desktop\\\\photo-viewer\\\\src\\\\components\\\\AddNewPhoto\\\\index.js\";\nimport React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { closeAddNewPhotoAction } from '../../store/actions/addNewPhotoAction';\nimport './style.css';\n\nclass AddNewPhoto extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const postMethod = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          thumbnailUrl: this.state.thumbnailUrl,\n          url: this.state.photoUrl\n        })\n      };\n      fetch('https://jsonplaceholder.typicode.com/photos', postMethod).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      title: '',\n      thumbnailUrl: '',\n      photoUrl: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Add New Photo\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-and-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Title:\"), React.createElement(\"input\", {\n      id: \"title\",\n      className: \"input\",\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Enter photo title...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"label-and-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Thumbnail URL:\"), React.createElement(\"input\", {\n      id: \"thumbnailUrl\",\n      className: \"input\",\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Enter the thumbnail url here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"label-and-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Photo URL:\"), React.createElement(\"input\", {\n      id: \"photoUrl\",\n      className: \"input\",\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Enter the photo url here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClose: () => {\n      dispatch(closeAddNewPhotoAction());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddNewPhoto);","map":{"version":3,"sources":["C:/Users/sandr/Desktop/photo-viewer/src/components/AddNewPhoto/index.js"],"names":["React","Modal","Button","connect","closeAddNewPhotoAction","AddNewPhoto","Component","constructor","props","handleChange","e","setState","target","id","value","handleSubmit","postMethod","method","headers","body","JSON","stringify","title","state","thumbnailUrl","url","photoUrl","fetch","then","res","json","data","console","log","render","show","handleClose","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { closeAddNewPhotoAction } from '../../store/actions/addNewPhotoAction'\r\nimport './style.css'\r\n\r\nclass AddNewPhoto extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            title : '',\r\n            thumbnailUrl : '',\r\n            photoUrl : ''\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        const postMethod = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept' : 'application/json',\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                thumbnailUrl: this.state.thumbnailUrl,\r\n                url: this.state.photoUrl\r\n            })\r\n        }\r\n        fetch('https://jsonplaceholder.typicode.com/photos', postMethod)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n        })\r\n    }\r\n    render (){\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.props.handleClose}>\r\n               <Modal.Header closeButton>\r\n                   <Modal.Title>Add New Photo</Modal.Title>\r\n               </Modal.Header>\r\n               <Modal.Body>\r\n                   <div className='body-container'>\r\n                       <div className='cont'>\r\n                            <div className='label-and-input'>\r\n                                 <span className='label'>Title:</span>\r\n                                 <input id='title' className='input' onChange={this.handleChange} type='text' placeholder='Enter photo title...' />\r\n                            </div>\r\n                            <div className='label-and-input'>\r\n                                 <span className='label'>Thumbnail URL:</span>\r\n                                 <input id='thumbnailUrl' className='input' onChange={this.handleChange} type='text' placeholder='Enter the thumbnail url here...' />\r\n                            </div>\r\n                            <div className='label-and-input'>\r\n                                 <span className='label'>Photo URL:</span>\r\n                                 <input id='photoUrl' className='input' onChange={this.handleChange} type='text' placeholder='Enter the photo url here...' />\r\n                            </div>\r\n                       </div>\r\n                   </div>\r\n               </Modal.Body>\r\n               <Modal.Footer>\r\n                    <Button variant=\"outline-dark\" onClick={this.handleSubmit}>\r\n                            Submit\r\n                    </Button>\r\n                   <Button variant=\"outline-dark\" onClick={this.props.handleClose}>\r\n                           Close\r\n                   </Button>\r\n               </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    } \r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClose: () => {\r\n            dispatch(closeAddNewPhotoAction())\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(AddNewPhoto)"]},"metadata":{},"sourceType":"module"}